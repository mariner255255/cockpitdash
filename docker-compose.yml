version: '3.8'

services:
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=taskmanager.settings.development
      - DEBUG=True
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - DB_HOST=db
      - DB_NAME=taskmanager
      - DB_USER=taskuser
      - DB_PASSWORD=Admin255255@@
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_SECRET_KEY=dev-secret-key-change-in-production
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=taskmanager
      - POSTGRES_USER=taskuser
      - POSTGRES_PASSWORD=Admin255255@@
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskuser"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

networks:
  default:
    driver: bridge
    ipam:
      driver: default

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
